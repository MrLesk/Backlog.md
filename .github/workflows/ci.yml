name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: lint-and-unit-test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-${{ matrix.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-bun-
      - run: bun install --frozen-lockfile --linker=isolated
      - run: bun run lint

      # Windows: Disable Windows Defender real-time scanning for test directory
      - name: Optimize Windows test environment
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          # Add test directory to Windows Defender exclusions
          Add-MpPreference -ExclusionPath "$env:GITHUB_WORKSPACE\src\test" -ErrorAction SilentlyContinue
          Add-MpPreference -ExclusionProcess "bun.exe" -ErrorAction SilentlyContinue

      - name: Run tests
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Windows: Reduce concurrency to minimize file system contention
            # and use longer timeout due to Defender overhead
            bun test --max-concurrency=5 --timeout=15000 --reporter=junit --reporter-outfile=test-results.xml
          else
            # Unix: Use default concurrency (20) with shorter timeout
            bun test --timeout=10000 --reporter=junit --reporter-outfile=test-results.xml
          fi
        shell: bash

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: test-results.xml
          retention-days: 30

  build-test:
    name: compile-and-smoke-test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-${{ matrix.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-bun-
      - run: bun install --frozen-lockfile --linker=isolated
      - name: Build standalone binary
        shell: bash
        run: |
          VER="$(jq -r .version package.json)"
          OUT="backlog-test${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          bun build src/cli.ts \
            --compile --minify --sourcemap \
            --define __EMBEDDED_VERSION__="\"${VER}\"" \
            --outfile="$OUT"
      - name: Smoke-test binary
        shell: bash
        run: |
          FILE="backlog-test${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          chmod +x "$FILE"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell -command ".\\$FILE --version"
            powershell -command ".\\$FILE --help"
          else
            "./$FILE" --version
            "./$FILE" --help
          fi
