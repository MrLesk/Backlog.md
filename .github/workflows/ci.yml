name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: lint-and-unit-test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-${{ matrix.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-bun-
      - run: bun install --frozen-lockfile
      - run: bun run lint
      - run: bun test

  build-test:
    name: compile-and-smoke-test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-${{ matrix.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-bun-
      - run: bun install --frozen-lockfile
      - name: Build standalone binary
        shell: bash
        run: |
          VER="$(jq -r .version package.json)"
          OUT="backlog-test${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          bun build src/cli.ts \
            --compile --minify --sourcemap \
            --define __EMBEDDED_VERSION__='"${VER}"' \
            --outfile="$OUT"
      - name: Smoke-test binary
        shell: bash
        run: |
          FILE="backlog-test${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          chmod +x "$FILE"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell -command ".\\$FILE --version"
            powershell -command ".\\$FILE --help"
          else
            "./$FILE" --version
            "./$FILE" --help
          fi
